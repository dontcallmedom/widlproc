<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE Definitions SYSTEM "widlprocxml.dtd">
<Definitions>
  <Module name="dom" id="::dom">
    <webidl>module dom {
  interface Node {
    readonly attribute unsigned short nodeType;
  };
};</webidl>
    <Interface name="Node" id="::dom::Node">
      <webidl>  interface Node {
    readonly attribute unsigned short nodeType;
  };</webidl>
      <Attribute readonly="readonly" name="nodeType" id="::dom::Node::nodeType">
        <webidl>    readonly attribute unsigned short nodeType;</webidl>
        <Type type="unsigned short"/>
      </Attribute>
    </Interface>
  </Module>
  <Module name="events" id="::events">
    <webidl>module events {

  interface EventTarget {
    void addEventListener(DOMString type,
                          <ref>EventListener</ref> listener,
                          boolean useCapture);
  };

  <ref>dom::Node</ref> implements <ref>EventTarget</ref>;
};</webidl>
    <Interface name="EventTarget" id="::events::EventTarget">
      <webidl>  interface EventTarget {
    void addEventListener(DOMString type,
                          <ref>EventListener</ref> listener,
                          boolean useCapture);
  };</webidl>
      <Operation name="addEventListener" id="::events::EventTarget::addEventListener">
        <webidl>    void addEventListener(DOMString type,
                          <ref>EventListener</ref> listener,
                          boolean useCapture);</webidl>
        <Type type="void"/>
        <ArgumentList>
          <Argument name="type">
            <Type type="DOMString"/>
          </Argument>
          <Argument name="listener">
            <Type name="EventListener"/>
          </Argument>
          <Argument name="useCapture">
            <Type type="boolean"/>
          </Argument>
        </ArgumentList>
      </Operation>
    </Interface>
    <Implements name1="dom::Node" name2="EventTarget">
      <webidl>  <ref>dom::Node</ref> implements <ref>EventTarget</ref>;</webidl>
    </Implements>
  </Module>
</Definitions>
